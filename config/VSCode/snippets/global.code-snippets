{
	// JS/TS
	"import statement": {
		"scope": "javascript,typescript,javascriptreact,typescriptreact",
		"prefix": "imp",
		"body":[
			"import $2 from '$1';$0"
		],
		"description": "Insert import statement"
	},
	"export default": {
		"scope": "javascript,typescript,javascriptreact,typescriptreact",
		"prefix": "expd",
		"body":[
			"export default $1;$0"
		],
		"description": "export default"
	},
	"const variable": {
		"scope": "javascript,typescript,javascriptreact,typescriptreact",
		"prefix": "cvar",
		"body": "const $1 = $2;$0",
		"description": "Create const variable"
	},

	// JS/TS - React only
	"import react and component": {
		"scope": "javascriptreact,typescriptreact",
		"prefix": "imprc",
		"body":[
			"import React, {Component} from 'react';"
		],
		"description": "Import react and component"
	},
	"Function component": {
		"scope": "javascriptreact,typescriptreact",
		"prefix": "fc",
		"body": [
			"function $1(props) {",
			"\treturn (",
			"\t\t$0",
			"\t);",
			"}",
		],
		"description": "Create function component"
	},
	"Class component": {
		"scope": "javascriptreact,typescriptreact",
		"prefix": "cc",
		"body": [
			"class $1 extends Component {",
			"\tconstructor(props) {",
			"\t\tsuper(props);",
			"",
			"\t\tthis.state={$2};",
			"\t}$0",
			"}"
		],
		"description": "Create Class component"
	},
	"Class component: this.setState": {
		"scope": "javascriptreact,typescriptreact",
		"prefix": "ss",
		"body": "this.setState({$1});$0",
		"description": "Class component: this.setState"
	},
	"Class component: render": {
		"scope": "javascriptreact,typescriptreact",
		"prefix": "ren",
		"body":[
			"render() {",
			"\treturn (",
			"\t\t$1",
			"\t);",
			"}$0"
		],
		"description": "Class component: render"
	},
	"Class component: componentDidMount": {
		"scope": "javascriptreact,typescriptreact",
		"prefix": "cdm",
		"body": [
			"async componentDidMount() {",
			"\t$0",
			"}"
		],
		"description": "Class component: componentDidMount"
	},
	"div with className": {
		"scope": "javascriptreact,typescriptreact",
		"prefix": "divcl",
		"body": "<div className=\"$1\"$0",
		"description": "div with className"
	}
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
}
