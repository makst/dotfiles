% jq, custom

# Object: turn into array if not yet an array
jq 'select(objects)|=[.]'

# Array: flatten array objects
jq 'map([paths(scalars) as $path | {"key": $path | join("."), "value": getpath($path)}] | from_entries)'

# Array: filter by key
<get_data> | jq 'map(select(.<key> == <value>))'

# Array: select keys
<get_data> | jq --arg keys "$(echo <array_keys>)" '.[] | to_entries | map(select(.key == ($keys | split(" ")[]))) | from_entries'

$ key: <get_data> | jq '.[0] | to_entries[] | .key'
$ array_keys: <get_data> | jq '.[0] | to_entries[] | .key' --- --multi --expand
