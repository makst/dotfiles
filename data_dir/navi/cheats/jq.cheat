% jq, custom

# Object: select keys
<get_data> | jq --arg keys "$(echo <object_keys>)" '. | to_entries | map(select(.key == ($keys | split(" ")[]))) | from_entries'

# Array: select keys
<get_data> | jq --arg keys "$(echo <array_keys>)" '.<array_access_key>[] | to_entries | map(select(.key == ($keys | split(" ")[]))) | from_entries'

$ array_access_key: <get_data> | jq '. | to_entries | .[]' | jq -r '.key' --- --delimiter '\s\s+'
$ array_keys: <get_data> | jq '.<array_access_key>[0] | to_entries | .[]' | jq -r '.key' --- --multi --expand
$ object_keys: <get_data> | jq '. | to_entries | .[]' | jq -r '.key' --- --multi --expand
