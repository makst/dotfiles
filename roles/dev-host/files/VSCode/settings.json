// Place your settings in this file to overwrite the default settings
{
    // ------------- Editor
    // Insert snippets when their prefix matches. Works best when 'quickSuggestions' aren't enabled.
    "editor.tabCompletion": "on",
    // Render vertical rulers after a certain number of monospace characters. Use multiple values for multiple rulers. No rulers are drawn if array is empty
    "editor.rulers": [
        100
    ],
    // Configure editor settings to be overridden for [terraform] language.
    "editor.formatOnSave": false,
    // ------------- Files
    // When enabled, will trim trailing whitespace when saving a file.
    "files.trimTrailingWhitespace": true,
    // When enabled, insert a final new line at the end of the file when saving it.
    "files.insertFinalNewline": true,
    // ------------- Workbench
    "workbench.iconTheme": "file-icons",
    // -------------------------
    // -------------- Extensions
    // -------------------------
    // ------------- GitLens
    "gitlens.gitExplorer.files.layout": "tree",
    "gitlens.blame.line.enabled": false,

    // ------------ TSLint
    // The path to the rules configuration file
    "tslint.configFile": "tslint.json",
    // -------------------

    // ------------- Vim
     // Enable the EasyMotion plugin for Vim.
    "vim.easymotion": true,
    "vim.useSystemClipboard": true,
    "vim.disableAnnoyingNeovimMessage": true,
    // What key should <leader> map to in remappings?
    "vim.leader": ",",
    "vim.surround": true,
    // Override VSCode's copy command with our own copy command, which works better with VSCodeVim. Turn this off if copying is not working.
    "vim.overrideCopy": false,
    "vim.insertModeKeyBindings": [
        {
            "before": [
                "j",
                "j"
            ],
            "after": [
                "<Esc>"
            ]
        }
    ],
    "vim.normalModeKeyBindingsNonRecursive": [
        {
            "before": ["leader", "w"],
            "after": [],
            "commands": [
                {
                    "command": "workbench.action.files.save",
                    "args": []
                }
            ]
        },
        {
            "before": ["leader","."],
            "after": [],
            "commands": [
                {
                    "command": "workbench.action.navigateForward",
                    "args": []
                }
            ]
        },
        {
            "before": ["leader","m"],
            "after": [],
            "commands": [
                {
                    "command": "workbench.action.navigateBack",
                    "args": []
                }
            ]
        },
        {
            "before": ["leader","t"],
            "after": [],
            "commands": [
                {
                    "command": "workbench.action.terminal.toggleTerminal",
                    "args": []
                }
            ]
        },
        {
            "before": ["leader","f", "r"],
            "after": [],
            "commands": [
                {
                    "command": "editor.action.referenceSearch.trigger",
                    "args": []
                }
            ]
        },
        {
            "before": ["<leader>", "o"],
            "after": [],
            "commands": [
                {
                    "command": "workbench.action.quickOpen"
                }
            ]
        },
        // debugging
        {
            "before": ["leader","d"],
            "after": [],
            "commands": [
                {
                    "command": "workbench.action.debug.start",
                    "args": [],
                    "when": "!inDebugMode"
                }
            ]
        },
        {
            "before": ["leader","l"],
            "after": [],
            "commands": [
                {
                    "command": "workbench.action.debug.stepOver",
                    "args": [],
                    "when": "inDebugMode"
                }
            ]
        },
        {
            "before": ["leader","c"],
            "after": [],
            "commands": [
                {
                    "command": "workbench.action.debug.continue",
                    "args": [],
                    "when": "inDebugMode"
                }
            ]
        },
        {
            "before": ["leader","i"],
            "after": [],
            "commands": [
                {
                    "command": "workbench.action.debug.stepInto",
                    "args": [],
                    "when": "inDebugMode"
                }
            ]
        },
        {
            "before": ["leader","b"],
            "after": [],
            "commands": [
                {
                    "command": "editor.debug.action.toggleBreakpoint",
                    "args": [],
                    "when": "inDebugMode"
                }
            ]
        },
        {
            "before": ["leader","h"],
            "after": [],
            "commands": [
                {
                    "command": "editor.debug.action.showDebugHover",
                    "args": [],
                    "when": "inDebugMode"
                }
            ]
        }
    ],
    //
    "extensions.ignoreRecommendations": false,
    "gitlens.advanced.messages": {
        "suppressCommitHasNoPreviousCommitWarning": false,
        "suppressCommitNotFoundWarning": false,
        "suppressFileNotUnderSourceControlWarning": false,
        "suppressGitVersionWarning": false,
        "suppressLineUncommittedWarning": false,
        "suppressNoRepositoryWarning": false,
    },
    "explorer.confirmDelete": false,
    "gitlens.currentLine.enabled": false,
    "gitlens.hovers.currentLine.enabled": false,
    "gitlens.keymap": "chorded",
    "explorer.confirmDragAndDrop": false,

    // Move Typescript extension
    "movets.skipWarning": true,
    "typescript.updateImportsOnFileMove.enabled": "always",
    "gitlens.views.repositories.files.layout": "tree",
    "editor.snippetSuggestions": "top",
    "terminal.integrated.rendererType": "dom",
    "editor.tabSize": 2,
    "tslint.enable": false,
    "tslint.exclude": "",
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "window.zoomLevel": -1
}
